; --COPYRIGHT--,BSD_EX
;  Copyright (c) 2012, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 
; ******************************************************************************
;  
;                        MSP430 CODE EXAMPLE DISCLAIMER
; 
;  MSP430 code examples are self-contained low-level programs that typically
;  demonstrate a single peripheral function or device feature in a highly
;  concise manner. For this the code may rely on the device's power-on default
;  register values and settings such as the clock configuration and care must
;  be taken when combining code from several examples to avoid potential side
;  effects. Also see www.ti.com/grace for a GUI- and www.ti.com/msp430ware
;  for an API functional library-approach to peripheral configuration.
; 
; --/COPYRIGHT--
;******************************************************************************
;  MSP430G2230 Demo - SPI 3-wire Master Incremented Data
;
;  Description: SPI Master communicates full-duplex with SPI Slave using
;  3-wire mode. Incrementing data is sent by the master starting at 0x01.
;  Received data is expected to be same as the previous transmission. If high,
;  P1.2/LED indicates valid data reception.
;  ACLK = VLO, MCLK = SMCLK = Default DCO
;
;  Note: Ensure the slave device is running before the master device starts
;    code execution
;
;                  Slave                      Master
;          (msp430g2230_usi_03.c)
;                MSP430G2230               MSP430G2230
;             -----------------          -----------------
;            |              XIN|-    /|\|              XIN|-
;            |                 |      | |                 |
;            |             XOUT|-     --|RST          XOUT|-
;            |                 | /|\    |                 |
;            |          RST/NMI|--+     |                 |
;            |                 |        |                 |
;            |                 |        |             P1.2|->LED
;            |         SDI/P1.7|<-------|P1.6/SDO         |
;            |         SDO/P1.6|------->|P1.7/SDI         |
;            |        SCLK/P1.5|<-------|P1.5/SCLK        |
;
;  B. Finch
;  Texas Instruments, Inc
;  May 2012
;  Built with CCS Version: 5.2.0.00069
;******************************************************************************

#include <msp430.h>

;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; Assemble to Flash memory
            EVEN
;-------------------------------------------------------------------------------
RESET       mov.w   #0x280,SP               ; Initialize stackpointer
            mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; Stop WDT
            mov.b   #0x1B,&P1REN            ; Terminate unavailable Port1 pins 
            bis.b   #LFXT1S_2,&BCSCTL3      ; Select VLO as low freqency clock
            bis.b   #BIT2+BIT5+BIT6+BIT7,&P1DIR ; Available P1.x pins: outputs

            bis.b   #USIPE7+USIPE6+USIPE5+USIMST+USIOE,&USICTL0 ; Ports, Master mode
            bis.b   #USIIE,&USICTL1         ; Counter interrupt, flag remains set
            bis.b   #USIDIV_4+USISSEL_2,&USICKCTL   ; /16, SMCLK
            bic.b   #USISWRST,&USICTL0      ; USI released for operation

            mov.w   #0x01,R4                ; Initialize MST_Data
            mov.w   #0,R5                   ; Initialize SLV_Data

            mov.b   R4,&USISRL              ; init-load data
            mov.b   #8,&USICNT              ; init-load counter
            bis.w   #LPM0+GIE,SR            ; LMP0 with interrupts

infloop         jmp     infloop


;-------------------------------------------------------------------------------
USI_ISR
;-------------------------------------------------------------------------------
            bit.b   R5,&USISRL              ; SLV_Data and USISRL
            jnc     down                    ; if not equal, turn LED off
            bis.b   #BIT2,&P1OUT            ; set P1.2 LED on
            jmp     increments
down        bic.b   #BIT2,&P1OUT            ; clear P1.2 LED off

increments  inc     R4                      ; MST_Data++
            inc     R5                      ; SLV_Data++

            mov.b   R4,&USISRL
            mov.b   #8,&USICNT              ; re-load counter

            mov.w   #40,R6                  ; delay counter 
delay       dec     R6                      ; Add time between transmissions to
            jnz     delay                   ; Make sure slave can process info
            reti

;-------------------------------------------------------------------------------
;           Interrupt Vectors Used MSP430G22x0
;-------------------------------------------------------------------------------
            COMMON  INTVEC
            ORG     RESET_VECTOR            ; MSP430 RESET Vector
            DW      RESET   
            ORG     USI_VECTOR              ; USI
            DW      USI_ISR
            END
