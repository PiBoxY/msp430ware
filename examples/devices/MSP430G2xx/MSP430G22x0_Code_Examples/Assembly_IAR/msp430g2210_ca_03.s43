; --COPYRIGHT--,BSD_EX
;  Copyright (c) 2012, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 
; ******************************************************************************
;  
;                        MSP430 CODE EXAMPLE DISCLAIMER
; 
;  MSP430 code examples are self-contained low-level programs that typically
;  demonstrate a single peripheral function or device feature in a highly
;  concise manner. For this the code may rely on the device's power-on default
;  register values and settings such as the clock configuration and care must
;  be taken when combining code from several examples to avoid potential side
;  effects. Also see www.ti.com/grace for a GUI- and www.ti.com/msp430ware
;  for an API functional library-approach to peripheral configuration.
; 
; --/COPYRIGHT--
;******************************************************************************
;  MSP430G2210 Demo - Comp_A, Simple 2.2V Low Battery Detect
;
;  Description: Two comparator_A reference generators 0.25*Vcc and ~0.55V
;  are compared for a simple battery check of 2.2V. In the subroutine
;  Batt_Check, a small capacitor between P1.2/CA2 and Vss is first charged
;  to 0.25*Vcc and then compared to ~0.55V. If 0.25*Vcc,
;  is above ~0.55V, P1.5 is toggled, else set. Batt_Check is called
;  constantly in an endless loop - in an actual application, Batt_Check
;  should be called infrequently to save power.
;  ACLK = VLO, MCLK = SMCLK = default DCO
;
;  There is a tolerance of the Comp_A reference generator and in the
;  device specific datasheet. In most applications, the tolerence of the
;  reference generator is more than adequate to detect Low Battery.
;
;        MSP430G2210
;            -----------------
;       /|\ |              XIN|-
;        |  |                 |
;        ---|RST          XOUT|-
;           |                 |
;     +-----|P1.2/CA2     P1.5|--> Toggles if 0.25*VCC>0.55V (or VCC>2.2V), else set
;     |     |                 |
;    ===.1uf|                 |
;     |     |                 |
;     +-----|Vss
;
;
;  B. Finch
;  Texas Instruments, Inc
;  May 2012
;  Built with CCS Version: 5.2.0.00069
;******************************************************************************

#include <msp430.h>

;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; Assemble to Flash memory
            EVEN
;-------------------------------------------------------------------------------  
RESET       mov.w   #0x280,SP               ; Initialize stackpointer
            mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; Stop WDT
            mov.b   #0x1B,&P1REN            ; Terminate unavailable Port1 pins 
            bis.b   #LFXT1S_2,&BCSCTL3      ; Select VLO as low freqency clock

            bis.b   #BIT5,&P1DIR            ; Set P1.5 to output direction
            mov.b   #P2CA0+P2CA4,&CACTL2    ; P1.2/CA2 = +comp

loop        call    #Batt_Check
            jmp     loop

;-------------------------------------------------------------------------------
Batt_Check
;-------------------------------------------------------------------------------
            mov.b   #CAREF_1+CAON,&CACTL1   ; 0.25*Vcc on P1.2, Comp. on
            mov.w   #16384,R4               ; delay
delay       dec.w   R4
            jne     delay

            mov.b   #CARSEL+CAREF_2+CAREF_1+CAON,&CACTL1 ; 0.55V on -, Comp. on
            bit.b   #CAOUT,&CACTL2
            jeq     LEDset
toggle      xor.b   #BIT5,&P1OUT            ; toggle LED
            jmp     exit
LEDset      bis.b   #BIT5,&P1OUT            ; LED on
exit        clr.b   CACTL1                  ; Disable Comp_A, save power
            ret

;-------------------------------------------------------------------------------
;           Interrupt Vectors Used MSP430G22x0
;-------------------------------------------------------------------------------
            COMMON  INTVEC
            ORG     RESET_VECTOR            ; MSP430 RESET Vector
            DW      RESET                  
            END
