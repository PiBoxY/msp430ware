; --COPYRIGHT--,BSD_EX
;  Copyright (c) 2012, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 
; ******************************************************************************
;  
;                        MSP430 CODE EXAMPLE DISCLAIMER
; 
;  MSP430 code examples are self-contained low-level programs that typically
;  demonstrate a single peripheral function or device feature in a highly
;  concise manner. For this the code may rely on the device's power-on default
;  register values and settings such as the clock configuration and care must
;  be taken when combining code from several examples to avoid potential side
;  effects. Also see www.ti.com/grace for a GUI- and www.ti.com/msp430ware
;  for an API functional library-approach to peripheral configuration.
; 
; --/COPYRIGHT--
;******************************************************************************
;  MSP430G22x0 Demo - Basic Clock, LPM3 Using WDT ISR, VLO ACLK
;
;  Description: This program operates MSP430 normally in LPM3, pulsing P1.2
;  ~ 6 second intervals. WDT ISR used to wake-up system. All I/O configured
;  as low outputs to eliminate floating inputs. Current consumption does
;  increase when LED is powered on P1.2. Demo for measuring LPM3 current.
;  ACLK = VLO/2, MCLK = SMCLK = default DCO
;
;
;           MSP430G22x0
;         ---------------
;     /|\|            XIN|-
;      | |               |
;      --|RST        XOUT|-
;        |               |
;        |           P1.2|-->LED
;
;  B. Finch
;  Texas Instruments, Inc
;  May 2012
;  Built with CCS Version: 5.2.0.00069
;******************************************************************************

#include <msp430.h>

;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; Assemble to Flash memory
            EVEN
;-------------------------------------------------------------------------------  
RESET       mov.w   #0x280,SP               ; Initialize stackpointer
            mov.b   #0x1B,&P1REN            ; Terminate unavailable Port1 pins 
            bis.b   #LFXT1S_2,&BCSCTL3      ; Select VLO as low freqency clock

            bis.b   #DIVA_1,&BCSCTL1        ; ACLK/2
            mov.w   #WDT_ADLY_1000,&WDTCTL  ; Interval timer
            bis.b   #WDTIE,&IE1             ; Enable WDT interrupt

            bis.b   #BIT2+BIT5+BIT6+BIT7,&P1DIR ; Available P1.x pins: outputs
            mov.b   #0,&P1OUT               ; Reset available P1.x pins

loop        bis.b   #BIT2,P1OUT             ; Set P1.2 LED on
            mov.w   #100,R4                 ; Initialize counter
delay       dec.w   R4
            jne     delay
            bic.b   #BIT2,P1OUT             ; Clear P1.2 LED off
            bis.w   #LPM3+GIE,SR            ; Enter LPM3
            jne     loop
;-------------------------------------------------------------------------------
WDT_ISR
;-------------------------------------------------------------------------------
            bic.w   #LPM3,0(SP)             ; Clear LPM3 bits from 0(SR)
            reti

;-------------------------------------------------------------------------------
;           Interrupt Vectors Used MSP430G22x0
;-------------------------------------------------------------------------------
            COMMON  INTVEC
            ORG     RESET_VECTOR            ; MSP430 RESET Vector
            DW      RESET    
            ORG     WDT_VECTOR              ; Watchdog Timer Interrupt
            DW      WDT_ISR
            END
            
