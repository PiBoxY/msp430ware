; --COPYRIGHT--,BSD_EX
;  Copyright (c) 2012, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 
; ******************************************************************************
;  
;                        MSP430 CODE EXAMPLE DISCLAIMER
; 
;  MSP430 code examples are self-contained low-level programs that typically
;  demonstrate a single peripheral function or device feature in a highly
;  concise manner. For this the code may rely on the device's power-on default
;  register values and settings such as the clock configuration and care must
;  be taken when combining code from several examples to avoid potential side
;  effects. Also see www.ti.com/grace for a GUI- and www.ti.com/msp430ware
;  for an API functional library-approach to peripheral configuration.
; 
; --/COPYRIGHT--
;******************************************************************************
;  MSP430G22x0 Demo - Timer_A, Toggle P1.5-6, Cont. Mode ISR, DCO SMCLK
;
;  Description: Use Timer_A TA0CCRx units and overflow to generate four
;  independent timing intervals. For demonstration, TA0CCR0 and TA0CCR1 output
;  units are optionally selected with port pins P1.5 and P1.6 in toggle
;  mode. As such, these pins will toggle when respective TA0CCRx registers match
;  the TAR counter. Interrupts are also enabled with all TA0CCRx units,
;  software loads offset to next interval only - as long as the interval offset
;  is aded to CCRx, toggle rate is generated in hardware. Timer_A overflow ISR
;  is used to toggle P1.2 with software. Proper use of the TAIV interrupt
;  vector generator is demonstrated.
;  ACLK = VLO, MCLK = SMCLK = TACLK = default DCO ~1MHz
;  As coded and assuming ~1MHz DCO, toggle rates are:
;  P1.5 = TA0CCR0 ~ 1MHz/(200) ~5000Hz
;  P1.6 = TA0CCR1 ~ 1MHz/(1000) ~1000Hz
;  P1.2 = overflow ~ 1MHz/(65536) ~15Hz
;
;               MSP430G22x0
;            -----------------
;        /|\|              XIN|-
;         | |                 |
;         --|RST          XOUT|-
;           |                 |
;           |         P1.5/TA0|--> TA0CCR0
;           |         P1.6/TA1|--> TA0CCR1
;           |             P1.2|--> Overflow/software

;  B. Finch
;  Texas Instruments, Inc
;  May 2012
;  Built with CCS Version: 5.2.0.00069
;******************************************************************************

#include <msp430.h>

;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; Assemble to Flash memory
            EVEN
;-------------------------------------------------------------------------------    
RESET       mov.w   #0x280,SP               ; Initialize stackpointer
            mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; Stop WDT
            mov.b   #0x1B,&P1REN            ; Terminate unavailable Port1 pins 
            bis.b   #LFXT1S_2,&BCSCTL3      ; Select VLO as low freqency clock

            bis.b   #BIT5+BIT6,&P1SEL       ; P1.5 - P1.6 option select
            mov.b   #BIT2+BIT5+BIT6,P1DIR   ; P1.2,P1.5,P1.6 are outputs
            mov.w   #OUTMOD_4+CCIE,&TA0CCTL0; TA0CCR0 toggle, interrupt enabled
            mov.w   #OUTMOD_4+CCIE,&TA0CCTL1; TA0CCR1 toggle, interrupt enabled
            mov.w   #TASSEL_2+MC_2+TAIE,&TA0CTL ; SMCLK, Contmode, int enabled
            bis.w   #LPM0+GIE,SR            ; LPM0, ADC10_ISR will force exit

;-------------------------------------------------------------------------------
TIMERA0_ISR
;-------------------------------------------------------------------------------
            add     #200,&TA0CCR0           ; Add Offset to TA0CCR0
            reti

;-------------------------------------------------------------------------------
TIMERA1_ISR
;-------------------------------------------------------------------------------
            add.w   &TAIV,PC                ; Vector to ISR handler
            reti                            ; no interrupt
            jmp     TIMER1                  ; TACCR1
            reti                            ; TACCR2 not used
            reti                            ; Reserved
            reti                            ; Reserved
            jmp     OVERFLOW                ; Timer overflow interrupt
            reti                            ; Reserved
            reti                            ; Reserved
TIMER1      add     #1000,&TA0CCR1          ; Add Offset to TA0CCR1
            reti
OVERFLOW    xor.b   #BIT2,&P1OUT            ; Toggle P1.2
            reti
            reti

;-------------------------------------------------------------------------------
;           Interrupt Vectors Used MSP430G22x0
;-------------------------------------------------------------------------------
            COMMON  INTVEC
            ORG     RESET_VECTOR            ; MSP430 RESET Vector
            DW      RESET   
            ORG     TIMERA0_VECTOR          ; Timer_A0 Vector
            DW      TIMERA0_ISR
            ORG     TIMERA1_VECTOR          ; Timer_A1 Vector
            DW      TIMERA1_ISR
            END
            
