; --COPYRIGHT--,BSD_EX
;  Copyright (c) 2012, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 
; ******************************************************************************
;  
;                        MSP430 CODE EXAMPLE DISCLAIMER
; 
;  MSP430 code examples are self-contained low-level programs that typically
;  demonstrate a single peripheral function or device feature in a highly
;  concise manner. For this the code may rely on the device's power-on default
;  register values and settings such as the clock configuration and care must
;  be taken when combining code from several examples to avoid potential side
;  effects. Also see www.ti.com/grace for a GUI- and www.ti.com/msp430ware
;  for an API functional library-approach to peripheral configuration.
; 
; --/COPYRIGHT--
;******************************************************************************
;  MSP430FR57x Demo - TimerB, Toggle P1.0, Overflow ISR, 32kHz ACLK
;
;  Description: Toggle P1.0 using software and the TimerB overflow ISR.
;  In this example an ISR triggers when TB overflows. Inside the ISR P1.0
;  is toggled. Toggle rate is exactly 63.5mHz. Proper use of the TBIV interrupt
;  vector generator is demonstrated.
;  
;  ACLK = TACLK = 32768Hz, MCLK = SMCLK = 4MHz
;
;
;           MSP430FR5739
;         ---------------
;     /|\|               |
;      | |               |
;      --|RST            |
;        |               |
;        |           P1.0|-->LED
;
;   Tyler Witt
;   Texas Instruments Inc.
;   September 2011
;   Built with IAR Embedded Workbench v6.0
;******************************************************************************
#include <msp430.h>
;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE
;-------------------------------------------------------------------------------
RESET       mov.w   #SFE(CSTACK),SP         ; Initialize stackpointer
            mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; Stop WDT
	    bis.w   #BIT4+BIT5,&PJSEL0	    ; Setup XT1
	    mov.b   #0xA5,&CSCTL0_H
	    bis.w   #DCOFSEL0+DCOFSEL1,&CSCTL1 ; set max DCO setting
	    mov.w   #SELA_0+SELS_3+SELM_3,&CSCTL2 ; ACLK = XT1; MCLK = DCO
	    mov.w   #DIVA_0+DIVS_3+DIVM_3,&CSCTL3 ; set all dividers
	    bis.w   #XT1DRIVE_0,&CSCTL4
	    bic.w   #XT1OFF,&CSCTL4
OSCFlag	    bic.w   #XT1OFFG,&CSCTL5	    ; Clear XT1 fault flag
	    bic.w   #OFIFG,&SFRIFG1
	    cmp.w   #001h,&OFIFG	    ; Test oscillator fault flag
	    jz	    OSCFlag

	    bis.b   #BIT0,&P1DIR	    ; Set P1.0 to output direction
	    bis.b   #BIT0,&P1OUT
	    mov.w   #TBSSEL_1+MC_2+TBCLR+TBIE,&TB0CTL ; ACLK, cont mode, clear TBR
						      ; enable interrupt

Mainloop    bis.w   #LPM3+GIE,SR	    ; Enter LPM3 w/ interrupt
	    nop				    ; for debug
			
;-------------------------------------------------------------------------------
TB0_ISR;    ISR for TB0CCR0
;-------------------------------------------------------------------------------
	    add.w   &TB0IV,PC
	    reti			    ; No interrupt
	    reti			    ; CCR1 not used
	    reti			    ; CCR2 not used
	    reti			    ; reserved
	    reti			    ; reserved
	    reti			    ; reserved
	    reti			    ; reserved
	    xor.b   #BIT0,&P1OUT	    ; overflow
            reti
;-------------------------------------------------------------------------------
            COMMON  INTVEC                  ; Interrupt Vectors
;-------------------------------------------------------------------------------
            ORG     RESET_VECTOR            ; POR, ext. Reset
            DW      RESET
            ORG     TIMER0_B1_VECTOR        ; Timer B Vector
            DW      TB0_ISR
            END
