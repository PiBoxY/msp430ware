; --COPYRIGHT--,BSD_EX
;  Copyright (c) 2013, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 
; ******************************************************************************
;  
;                        MSP430 CODE EXAMPLE DISCLAIMER
; 
;  MSP430 code examples are self-contained low-level programs that typically
;  demonstrate a single peripheral function or device feature in a highly
;  concise manner. For this the code may rely on the device's power-on default
;  register values and settings such as the clock configuration and care must
;  be taken when combining code from several examples to avoid potential side
;  effects. Also see www.ti.com/grace for a GUI- and www.ti.com/msp430ware
;  for an API functional library-approach to peripheral configuration.
; 
; --/COPYRIGHT--
;******************************************************************************
;  MSP430i20xx Demo - Entering and waking up from LPM3.5 via P1.1 interrupt
;
;  Description: Download and run the program. The LED will remain ON if LPM4.5
;    is correctly entered. Pull P2.1 high to wake the device up from LPM4.5.
;   This will blink the LED.
;
;  ACLK = 32kHz, MCLK = SMCLK = Calibrated DCO/16 = 1.024MHz
;  * Ensure low_level_init.s43 is included when building/running this example *
;
;               MSP430i20xx
;             -----------------
;         /|\|                |
;          | |                |
;          --|RST         P1.4|--> LED
;            |            P2.1|--> Wakeup
;            |                |
;            |                |
;
;   T. Witt
;   Texas Instruments Inc.
;   October 2013
;   Built with IAR Embedded Workbench IDE v5.60
;******************************************************************************
#include "msp430.h"

            EXTERN  init                    ; low_level_init.s43 inclusion
;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE
;-------------------------------------------------------------------------------
RESET       mov.w   #SFE(CSTACK),SP         ; Initialize stackpointer
            call    #init
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop WDT
            mov.b   #0xFF,&P1OUT            ; Configure GPIO
            mov.b   #0xFF,&P1DIR            ; All output, all low
            mov.b   #0xFF,&P2OUT
            mov.b   #0xFF,&P2DIR

            bit.b   #LPM45IFG,&LPM45CTL     ; LPM4.5 Wakeup?
            jz      Config45                ; No, Configure for LPM4.5
            mov.b   #DIVM__16|DIVS__16,&CSCTL1; Yes, MCLK = SMCLK = DCO/16
            bis.b   #BIT4,&P1DIR            ; LED output
            bic.b   #LOCKLPM45,&LPM45CTL    ; Activate previous port settings
            jmp     Mainloop
Config45    bic.b   #BIT1,&P2OUT            ; Pull-down P2.1
            mov.b   #0xFD,&P2DIR            ; All output but P2.1
            bic.b   #BIT1,&P2IES            ; P2.1 Lo/Hi edge
            clr.b   &P2IFG                  ; Clear all P2 IFGs
            bis.b   #BIT1,&P2IE             ; P2.1 Interrupt Enabled
            bis.b   #BIT4,&P1OUT            ; LED on
            bic.b   #LOCKLPM45,&LPM45CTL    ; Disable GPIO power-on default
            bis.b   #PMMREGOFF,&LPM45CTL    ; Set REGOFF
            bis.w   #LPM4,SR                ; Enter LPM4.5
CatchLoop   nop                             ; Should never get here...
            jmp     CatchLoop

Mainloop    xor.b   #BIT4,&P1OUT            ; Toggle LED
Wait        mov.w   #10, R14                ; Set a delay of 100000 cycles total
L0          mov.w   #10000,R15              ; ... so LED blink is visible
L1          dec.w   R15                     ; Decrement R15
            jnz     L1                      ; Short Delay Over?
L2          dec.w   R14                     ; Decrement R14
            jnz     L0                      ; Total Delay over?
            jmp     Mainloop                ; Again

;-------------------------------------------------------------------------------
            COMMON  INTVEC                  ; Interrupt Vectors
;-------------------------------------------------------------------------------
            ORG     RESET_VECTOR            ; POR, ext. Reset
            DW      RESET
            END
