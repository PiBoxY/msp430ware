; --COPYRIGHT--,BSD_EX
;  Copyright (c) 2012, Texas Instruments Incorporated
;  All rights reserved.
;
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
;
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
;
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
;
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
;
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;
; ******************************************************************************
;
;                        MSP430 CODE EXAMPLE DISCLAIMER
;
;  MSP430 code examples are self-contained low-level programs that typically
;  demonstrate a single peripheral function or device feature in a highly
;  concise manner. For this the code may rely on the device's power-on default
;  register values and settings such as the clock configuration and care must
;  be taken when combining code from several examples to avoid potential side
;  effects. Also see www.ti.com/grace for a GUI- and www.ti.com/msp430ware
;  for an API functional library-approach to peripheral configuration.
;
; --/COPYRIGHT--
;*****************************************************************************
;   MSP430x11x1 Demo - Software Interface to HC165 Shift Register
;
;   Description: Read an 'HC165 shift register.  /LD is pulsed low to latch
;   in parallel data, then 8-bits are shifted out of the HC165 into the MSP430
;   stored in register Data (R4).
;   ACLK = n/a, MCLK = SMCLK = default DCO ~800k
;
;                       MSP430F1121
;                    -----------------
;                /|\|              XIN|-
;                 | |                 |
;       HC165     --|RST          XOUT|-
;     ----------    |                 |
;    |      /LD|<---|P2.0             |
;  ->|A-H   CLK|<---|P2.1             |
;  |-|INH    QH|--->|P2.2             |
;  |-|SER      |    |                 |
;  v
;
#define     DataL    R4
LD          EQU      001h                   ; P2.0 LD
CLK         EQU      002h                   ; P2.1 Serial clock
QH          EQU      004h                   ; P2.2 Data out
;
;   M. Buccini
;   Texas Instruments Inc.
;   Feb 2005
;   Built with IAR Embedded Workbench Version: 3.21A
;*****************************************************************************
#include <msp430.h>
;-----------------------------------------------------------------------------
            ORG     0F000h                  ; Program Start
;-----------------------------------------------------------------------------
RESET       mov.w   #0300h,SP               ; Initialize stackpointer
StopWDT     mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; Stop Watchdog Timer
SetupP2     mov.b   #LD,&P2OUT              ; /LD set, - P2.x reset
            bis.b   #LD+CLK,&P2DIR          ; /LD and CLK outputs
                                            ;
Mainloop    call    #Read_HC165             ; Data <-- HC165
            jmp     Mainloop                ; Repeat
                                            ;
;-----------------------------------------------------------------------------
Read_HC165; Shift data from HC165 --> Data (R4)
;-----------------------------------------------------------------------------
            bic.b   #LD,&P2OUT              ; /LD reset
            bis.b   #LD,&P2OUT              ; /LD set
            clr.w   DataL                   ;
            push.b  #08                     ; 8 bits to Read - TOS
RX_loop     bit.b   #QH,&P2IN               ; QH --> Carry
            rlc.b   DataL                   ; Carry --> Data
            bis.b   #CLK,&P2OUT             ; CLK set
            bic.b   #CLK,&P2OUT             ; CLK reset
            dec.b   0(SP)                   ; All 8 bits sent?
            jnz     RX_loop                 ;
            incd.w  SP                      ; bit counter off stack
            ret                             ; Return from subroutine
                                            ;
;-----------------------------------------------------------------------------
;           Interrupt Vectors
;-----------------------------------------------------------------------------
            ORG     0FFFEh                  ; MSP430 RESET Vector
            DW      RESET                   ;
            END
